temp.df <- cases[i:index_7,]
temp.df <- drop_na(temp.df) #last entry might have NA rows
min_weekday_temp <- filter(temp.df, new.cases == min(temp.df$new.cases))$weekday
min_weekday <- append(min_weekday, min_weekday_temp)
}
count(min_weekday)
mins = c()
means = c()
min_weekday <- c()
for (i in seq(2,dim(cases)[1],7)) {
index_7 <- i + 7
temp.df <- cases[i:index_7,]
temp.df <- drop_na(temp.df) #last entry might have NA rows
min_weekday_temp <- filter(temp.df, new.cases == min(temp.df$new.cases))$weekday
min_weekday <- append(min_weekday, min_weekday_temp)
}
table(min_weekday)
mins = c()
means = c()
min_weekday <- c()
for (i in seq(2,dim(cases)[1],7)) {
index_7 <- i + 7
temp.df <- cases[i:index_7,]
temp.df <- drop_na(temp.df) #last entry might have NA rows
mins <- append(mins, min(temp.df$new.cases))
means <- append(means, mean(temp.df$new.cases))
#append unique weekdays which have min value
min_weekday_temp <- filter(temp.df, new.cases == min(temp.df$new.cases))$weekday
if (length(min_weekday_temp) > 1) {
min_weekday_temp <- c("multiple")
}
min_weekday <- append(min_weekday, min_weekday_temp)
}
seven.day <- data.frame(dates = dates, slopes = slopes,
mins = mins, means=means, min_weekday = min_weekday)
seven.day
mins = c()
min_weekday <- c()
for (i in seq(2,dim(cases)[1],7)) {
index_7 <- i + 7
temp.df <- cases[i:index_7,]
temp.df <- drop_na(temp.df) #last entry might have NA rows
min_weekday_temp <- filter(temp.df, new.cases == min(temp.df$new.cases))$weekday
min_weekday <- append(min_weekday, min_weekday_temp)
}
table(min_weekday)
mins = c()
min_weekday <- c()
for (i in seq(2,dim(cases)[1],7)) {
index_7 <- i + 7
temp.df <- cases[i:index_7,]
temp.df <- drop_na(temp.df) #last entry might have NA rows
min_weekday_temp <- filter(temp.df, new.cases == min(temp.df$new.cases))$weekday
min_weekday <- append(min_weekday, min_weekday_temp)
}
table(min_weekday)
date(2020-02-23)
date("2020-02-23")
as.Date("2020-02-23")
mins = c()
min_weekday <- c()
for (i in seq(as.Date("2020-02-23"),dim(cases)[1],7)) {
index_7 <- i + 7
temp.df <- cases[i:index_7,]
temp.df <- drop_na(temp.df) #last entry might have NA rows
min_weekday_temp <- filter(temp.df, new.cases == min(temp.df$new.cases))$weekday
min_weekday <- append(min_weekday, min_weekday_temp)
}
mins = c()
min_weekday <- c()
for (i in seq(as.Date("2020-02-23"),(as.Date("2020-02-23")+dim(cases)[1]),7)) {
index_7 <- i + 7
temp.df <- cases[i:index_7,]
temp.df <- drop_na(temp.df) #last entry might have NA rows
min_weekday_temp <- filter(temp.df, new.cases == min(temp.df$new.cases))$weekday
min_weekday <- append(min_weekday, min_weekday_temp)
}
table(min_weekday)
mins = c()
min_weekday <- c()
for (i in seq(2,dim(cases)[1],7)) {
index_7 <- i + 7
temp.df <- cases[i:index_7,]
temp.df <- drop_na(temp.df) #last entry might have NA rows
min_weekday_temp <- filter(temp.df, new.cases == min(temp.df$new.cases))$weekday
min_weekday <- append(min_weekday, min_weekday_temp)
}
table(min_weekday)
as.Date("2020-02-23")
cases %>% filter(cases$date == as.Date("2020-02-23"))
which(cases$date == as.Date("2020-02-23"))
mins = c()
min_weekday <- c()
for (i in seq(which(cases$date == as.Date("2020-02-23")),dim(cases)[1],7)) {
index_7 <- i + 7
temp.df <- cases[i:index_7,]
temp.df <- drop_na(temp.df) #last entry might have NA rows
min_weekday_temp <- filter(temp.df, new.cases == min(temp.df$new.cases))$weekday
min_weekday <- append(min_weekday, min_weekday_temp)
}
table(min_weekday)
mins = c()
means = c()
min_weekday <- c()
max_weekday <- c()
for (i in seq(2,dim(cases)[1],7)) {
index_7 <- i + 7
temp.df <- cases[i:index_7,]
temp.df <- drop_na(temp.df) #last entry might have NA rows
mins <- append(mins, min(temp.df$new.cases))
means <- append(means, mean(temp.df$new.cases))
#append unique weekdays which have min value
min_weekday_temp <- filter(temp.df, new.cases == min(temp.df$new.cases))$weekday
if (length(min_weekday_temp) > 1) {
min_weekday_temp <- c("multiple")
}
min_weekday <- append(min_weekday, min_weekday_temp)
#append unique weekdays which have max value
max_weekday_temp <- filter(temp.df, new.cases == max(temp.df$new.cases))$weekday
if (length(max_weekday_temp) > 1) {
max_weekday_temp <- c("multiple")
}
max_weekday <- append(max_weekday, max_weekday_temp)
}
seven.day <- data.frame(dates = dates, slopes = slopes,
mins = mins, means=means,
min_weekday = min_weekday, max_weekday = max_weekday)
seven.day
table(seven.day$max_weekday)
table(seven.day$min_weekday)
min_weekday <- c()
for (i in seq(2,dim(cases)[1],7)) {
index_7 <- i + 7
temp.df <- cases[i:index_7,]
temp.df <- drop_na(temp.df) #last entry might have NA rows
min_weekday_temp <- filter(temp.df, new.cases == min(temp.df$new.cases))$weekday
min_weekday <- append(min_weekday, min_weekday_temp)
}
table(min_weekday)
max_weekday <- c()
for (i in seq(2,dim(cases)[1],7)) {
index_7 <- i + 7
temp.df <- cases[i:index_7,]
temp.df <- drop_na(temp.df) #last entry might have NA rows
max_weekday_temp <- filter(temp.df, new.cases == max(temp.df$new.cases))$weekday
max_weekday <- append(max_weekday, max_weekday_temp)
}
table(max_weekday)
cases[as.Date("2020-03-15"):(as.Date("2020-03-15")+7)]
cases[as.Date("2020-03-15"):(as.Date("2020-03-15")+7),]
which(cases$date == as.Date("2020-03-15"))
cases[which(cases$date == as.Date("2020-03-15")),]
cases[which(cases$date == as.Date("2020-03-15")):which(cases$date == as.Date("2020-03-15"))+7,]
cases[which(cases$date == as.Date("2020-03-15")):(which(cases$date == as.Date("2020-03-15"))+7),]
mins = c()
means = c()
min_weekday <- c()
max_weekday <- c()
for (i in seq(2,dim(cases)[1],6)) {
index_7 <- i + 7
temp.df <- cases[i:index_7,]
temp.df <- drop_na(temp.df) #last entry might have NA rows
mins <- append(mins, min(temp.df$new.cases))
means <- append(means, mean(temp.df$new.cases))
#append unique weekdays which have min value
min_weekday_temp <- filter(temp.df, new.cases == min(temp.df$new.cases))$weekday
if (length(min_weekday_temp) > 1) {
min_weekday_temp <- c("multiple")
}
min_weekday <- append(min_weekday, min_weekday_temp)
#append unique weekdays which have max value
max_weekday_temp <- filter(temp.df, new.cases == max(temp.df$new.cases))$weekday
if (length(max_weekday_temp) > 1) {
max_weekday_temp <- c("multiple")
}
max_weekday <- append(max_weekday, max_weekday_temp)
}
seven.day <- data.frame(dates = dates, slopes = slopes,
mins = mins, means=means,
min_weekday = min_weekday, max_weekday = max_weekday)
slopes <- c()
for (i in seq(2,dim(cases)[1],6)) {
index_7 <- i + 7
temp.df <- cases[i:index_7,]
temp.df <- drop_na(temp.df) #last entry might have NA rows
slopes <- append(slopes, coefficients(lm(new.cases~date, temp.df))['date'])
}
dates <- cases$date[1] + seq(1,dim(cases)[1]-1,7) #off by one error here, minus by 1 to get right date
mins = c()
means = c()
min_weekday <- c()
max_weekday <- c()
for (i in seq(2,dim(cases)[1],6)) {
index_7 <- i + 7
temp.df <- cases[i:index_7,]
temp.df <- drop_na(temp.df) #last entry might have NA rows
mins <- append(mins, min(temp.df$new.cases))
means <- append(means, mean(temp.df$new.cases))
#append unique weekdays which have min value
min_weekday_temp <- filter(temp.df, new.cases == min(temp.df$new.cases))$weekday
if (length(min_weekday_temp) > 1) {
min_weekday_temp <- c("multiple")
}
min_weekday <- append(min_weekday, min_weekday_temp)
#append unique weekdays which have max value
max_weekday_temp <- filter(temp.df, new.cases == max(temp.df$new.cases))$weekday
if (length(max_weekday_temp) > 1) {
max_weekday_temp <- c("multiple")
}
max_weekday <- append(max_weekday, max_weekday_temp)
}
seven.day <- data.frame(dates = dates, slopes = slopes,
mins = mins, means=means,
min_weekday = min_weekday, max_weekday = max_weekday)
mins = c()
means = c()
min_weekday <- c()
max_weekday <- c()
for (i in seq(2,dim(cases)[1],6)) {
index_7 <- i + 7
temp.df <- cases[i:index_7,]
temp.df <- drop_na(temp.df) #last entry might have NA rows
mins <- append(mins, min(temp.df$new.cases))
means <- append(means, mean(temp.df$new.cases))
#append unique weekdays which have min value
min_weekday_temp <- filter(temp.df, new.cases == min(temp.df$new.cases))$weekday
if (length(min_weekday_temp) > 1) {
min_weekday_temp <- c("multiple")
}
min_weekday <- append(min_weekday, min_weekday_temp)
#append unique weekdays which have max value
max_weekday_temp <- filter(temp.df, new.cases == max(temp.df$new.cases))$weekday
if (length(max_weekday_temp) > 1) {
max_weekday_temp <- c("multiple")
}
max_weekday <- append(max_weekday, max_weekday_temp)
}
seven.day <- data.frame(slopes = slopes,
mins = mins, means=means,
min_weekday = min_weekday, max_weekday = max_weekday)
seven.day
mins = c()
means = c()
min_weekday <- c()
max_weekday <- c()
for (i in seq(2,dim(cases)[1],6)) {
index_7 <- i + 7
temp.df <- cases[i:index_7,]
temp.df <- drop_na(temp.df) #last entry might have NA rows
mins <- append(mins, min(temp.df$new.cases))
means <- append(means, mean(temp.df$new.cases))
#append unique weekdays which have min value
min_weekday_temp <- filter(temp.df, new.cases == min(temp.df$new.cases))$weekday
if (length(min_weekday_temp) > 1) {
min_weekday_temp <- c("multiple")
}
min_weekday <- append(min_weekday, min_weekday_temp)
#append unique weekdays which have max value
max_weekday_temp <- filter(temp.df, new.cases == max(temp.df$new.cases))$weekday
if (length(max_weekday_temp) > 1) {
max_weekday_temp <- c("multiple")
}
max_weekday <- append(max_weekday, max_weekday_temp)
print(length(temp.df))
}
seven.day <- data.frame(slopes = slopes,
mins = mins, means=means,
min_weekday = min_weekday, max_weekday = max_weekday)
seven.day
mins = c()
means = c()
min_weekday <- c()
max_weekday <- c()
for (i in seq(2,dim(cases)[1],6)) {
index_7 <- i + 7
temp.df <- cases[i:index_7,]
temp.df <- drop_na(temp.df) #last entry might have NA rows
mins <- append(mins, min(temp.df$new.cases))
means <- append(means, mean(temp.df$new.cases))
#append unique weekdays which have min value
min_weekday_temp <- filter(temp.df, new.cases == min(temp.df$new.cases))$weekday
if (length(min_weekday_temp) > 1) {
min_weekday_temp <- c("multiple")
}
min_weekday <- append(min_weekday, min_weekday_temp)
#append unique weekdays which have max value
max_weekday_temp <- filter(temp.df, new.cases == max(temp.df$new.cases))$weekday
if (length(max_weekday_temp) > 1) {
max_weekday_temp <- c("multiple")
}
max_weekday <- append(max_weekday, max_weekday_temp)
print(dim(temp.df))
}
seven.day <- data.frame(slopes = slopes,
mins = mins, means=means,
min_weekday = min_weekday, max_weekday = max_weekday)
seven.day
mins = c()
means = c()
min_weekday <- c()
max_weekday <- c()
for (i in seq(2,dim(cases)[1],7)) {
index_7 <- i + 6
temp.df <- cases[i:index_7,]
temp.df <- drop_na(temp.df) #last entry might have NA rows
mins <- append(mins, min(temp.df$new.cases))
means <- append(means, mean(temp.df$new.cases))
#append unique weekdays which have min value
min_weekday_temp <- filter(temp.df, new.cases == min(temp.df$new.cases))$weekday
if (length(min_weekday_temp) > 1) {
min_weekday_temp <- c("multiple")
}
min_weekday <- append(min_weekday, min_weekday_temp)
#append unique weekdays which have max value
max_weekday_temp <- filter(temp.df, new.cases == max(temp.df$new.cases))$weekday
if (length(max_weekday_temp) > 1) {
max_weekday_temp <- c("multiple")
}
max_weekday <- append(max_weekday, max_weekday_temp)
print(dim(temp.df))
}
seven.day <- data.frame(slopes = slopes,
mins = mins, means=means,
min_weekday = min_weekday, max_weekday = max_weekday)
mins = c()
means = c()
min_weekday <- c()
max_weekday <- c()
for (i in seq(2,dim(cases)[1],7)) {
index_7 <- i + 6
temp.df <- cases[i:index_7,]
temp.df <- drop_na(temp.df) #last entry might have NA rows
mins <- append(mins, min(temp.df$new.cases))
means <- append(means, mean(temp.df$new.cases))
#append unique weekdays which have min value
min_weekday_temp <- filter(temp.df, new.cases == min(temp.df$new.cases))$weekday
if (length(min_weekday_temp) > 1) {
min_weekday_temp <- c("multiple")
}
min_weekday <- append(min_weekday, min_weekday_temp)
#append unique weekdays which have max value
max_weekday_temp <- filter(temp.df, new.cases == max(temp.df$new.cases))$weekday
if (length(max_weekday_temp) > 1) {
max_weekday_temp <- c("multiple")
}
max_weekday <- append(max_weekday, max_weekday_temp)
}
seven.day <- data.frame(slopes = slopes,
mins = mins, means=means,
min_weekday = min_weekday, max_weekday = max_weekday)
slopes <- c()
for (i in seq(2,dim(cases)[1],7)) {
index_7 <- i + 6
temp.df <- cases[i:index_7,]
temp.df <- drop_na(temp.df) #last entry might have NA rows
slopes <- append(slopes, coefficients(lm(new.cases~date, temp.df))['date'])
}
dates <- cases$date[1] + seq(1,dim(cases)[1]-1,7) #off by one error here, minus by 1 to get right date
mins = c()
means = c()
min_weekday <- c()
max_weekday <- c()
for (i in seq(2,dim(cases)[1],7)) {
index_7 <- i + 6
temp.df <- cases[i:index_7,]
temp.df <- drop_na(temp.df) #last entry might have NA rows
mins <- append(mins, min(temp.df$new.cases))
means <- append(means, mean(temp.df$new.cases))
#append unique weekdays which have min value
min_weekday_temp <- filter(temp.df, new.cases == min(temp.df$new.cases))$weekday
if (length(min_weekday_temp) > 1) {
min_weekday_temp <- c("multiple")
}
min_weekday <- append(min_weekday, min_weekday_temp)
#append unique weekdays which have max value
max_weekday_temp <- filter(temp.df, new.cases == max(temp.df$new.cases))$weekday
if (length(max_weekday_temp) > 1) {
max_weekday_temp <- c("multiple")
}
max_weekday <- append(max_weekday, max_weekday_temp)
}
seven.day <- data.frame(slopes = slopes,
mins = mins, means=means,
min_weekday = min_weekday, max_weekday = max_weekday)
seven.day
mins = c()
means = c()
min_weekday <- c()
max_weekday <- c()
for (i in seq(2,dim(cases)[1],7)) {
index_7 <- i + 6
temp.df <- cases[i:index_7,]
temp.df <- drop_na(temp.df) #last entry might have NA rows
mins <- append(mins, min(temp.df$new.cases))
means <- append(means, mean(temp.df$new.cases))
#append unique weekdays which have min value
min_weekday_temp <- filter(temp.df, new.cases == min(temp.df$new.cases))$weekday
if (length(min_weekday_temp) > 1) {
min_weekday_temp <- c("multiple")
}
min_weekday <- append(min_weekday, min_weekday_temp)
#append unique weekdays which have max value
max_weekday_temp <- filter(temp.df, new.cases == max(temp.df$new.cases))$weekday
if (length(max_weekday_temp) > 1) {
max_weekday_temp <- c("multiple")
}
max_weekday <- append(max_weekday, max_weekday_temp)
}
seven.day <- data.frame(date = dates, slopes = slopes,
mins = mins, means=means,
min_weekday = min_weekday, max_weekday = max_weekday)
seven.day
cases[which(cases$date == as.Date("2020-03-15")):(which(cases$date == as.Date("2020-03-15"))+7),]
cases[which(cases$date == as.Date("2020-03-15")):(which(cases$date == as.Date("2020-03-15"))+6),]
mins = c()
means = c()
min_weekday <- c()
max_weekday <- c()
n_days <- c()
for (i in seq(2,dim(cases)[1],7)) {
index_7 <- i + 6
temp.df <- cases[i:index_7,]
temp.df <- drop_na(temp.df) #last entry might have NA rows
mins <- append(mins, min(temp.df$new.cases))
means <- append(means, mean(temp.df$new.cases))
#append unique weekdays which have min value
min_weekday_temp <- filter(temp.df, new.cases == min(temp.df$new.cases))$weekday
if (length(min_weekday_temp) > 1) {
min_weekday_temp <- c("multiple")
}
min_weekday <- append(min_weekday, min_weekday_temp)
#append unique weekdays which have max value
max_weekday_temp <- filter(temp.df, new.cases == max(temp.df$new.cases))$weekday
if (length(max_weekday_temp) > 1) {
max_weekday_temp <- c("multiple")
}
max_weekday <- append(max_weekday, max_weekday_temp)
#get number of days in each interval for debugging purposes
n_days <- append(n_days, dim(temp.df)[1])
}
seven.day <- data.frame(date = dates, n_days = n_days, slopes = slopes,
mins = mins, means=means,
min_weekday = min_weekday, max_weekday = max_weekday)
seven.day
min_weekday <- c()
for (i in seq(2,dim(cases)[1],7)) {
index_7 <- i + 6
temp.df <- cases[i:index_7,]
temp.df <- drop_na(temp.df) #last entry might have NA rows
min_weekday_temp <- filter(temp.df, new.cases == min(temp.df$new.cases))$weekday
min_weekday <- append(min_weekday, min_weekday_temp)
}
table(min_weekday)
table(seven.day$min_weekday)
table(seven.day$max_weekday)
max_weekday <- c()
for (i in seq(2,dim(cases)[1],7)) {
index_7 <- i + 6
temp.df <- cases[i:index_7,]
temp.df <- drop_na(temp.df) #last entry might have NA rows
max_weekday_temp <- filter(temp.df, new.cases == max(temp.df$new.cases))$weekday
max_weekday <- append(max_weekday, max_weekday_temp)
}
table(max_weekday)
saturday.cases <- cases %>% filter(weekday == "Saturday")
hist(saturday.cases$new.cases, breaks = dim(saturday.cases)[1])
cases
cases %>% group_by(date = cut(date, breaks = c(-Inf, 10,20,30)))
dim(cases)
dim(cases)[1]
1:dim(cases)[1]
cases$ordinal <- 1:dim(cases)[1]
cases
cases$ordinal <- 1:dim(cases)[1]
cases %>% group_by(ordinal = cut(ordinal, breaks = c(-Inf,6,13,Inf)))
cases$ordinal <- 1:dim(cases)[1]
cases %>% group_by(ordinal = cut(ordinal, breaks = c(-Inf,6,13,Inf))) %>%
summarise()
cases$ordinal <- 1:dim(cases)[1]
cases %>% group_by(ordinal = cut(ordinal, breaks = c(-Inf,6,13,Inf))) %>%
summarise_each(funs(mean))
cases$ordinal <- 1:dim(cases)[1]
cases %>% group_by(ordinal = cut(ordinal, breaks = dim(cases)[1]/7)) %>%
summarise_each(funs(mean))
cases %>% group_by(ordinal = cut(ordinal, breaks = dim(cases)[1]/7)) %>%
summarise_each(funs(lm)
cases %>% group_by(ordinal = cut(ordinal, breaks = dim(cases)[1]/7)) %>%
summarise_each(funs(lm(new.cases~date)))
cases %>% group_by(ordinal = cut(ordinal, breaks = dim(cases)[1]/7)) %>%
summarise_each(funs(lm(new.cases~date, .)))
cases %>% group_by(ordinal = cut(ordinal, breaks = dim(cases)[1]/7)) %>%
summarise(mean(new.cases))
cases %>% group_by(ordinal = cut(ordinal, breaks = dim(cases)[1]/7)) %>%
summarise(mean(new.cases), min(new.cases))
cases %>% group_by(ordinal = cut(ordinal, breaks = dim(cases)[1]/7)) %>%
summarise(mean(new.cases), min(new.cases), max(new.cases))
cases %>% group_by(ordinal = cut(ordinal, breaks = dim(cases)[1]/7)) %>%
summarise(mean(new.cases), min(new.cases), max(new.cases), range(new.cases))
cases$ordinal <- 1:dim(cases)[1]
cases %>% group_by(ordinal = cut(ordinal, breaks = dim(cases)[1]/7)) %>%
summarise_each(funs(mean))
cases %>% group_by(ordinal = cut(ordinal, breaks = dim(cases)[1]/7)) %>%
summarise(mean(new.cases), min(new.cases), max(new.cases), range(new.cases))
cases %>% group_by(ordinal = cut(ordinal, breaks = dim(cases)[1]/7)) %>%
summarise(mean(new.cases), min(new.cases), max(new.cases))
cases %>% group_by(ordinal = cut(ordinal, breaks = dim(cases)[1]/7)) %>%
summarise(mean(new.cases), min(new.cases), max(new.cases), n(weekday))
cases %>% group_by(ordinal = cut(ordinal, breaks = dim(cases)[1]/7)) %>%
summarise(mean(new.cases), min(new.cases), max(new.cases))
cases
cases %>% group_by(ordinal = cut(ordinal, breaks = dim(cases)[1]/7)) %>%
summarise(mean(new.cases), min(new.cases), max(new.cases), n_distinct(weekday))
